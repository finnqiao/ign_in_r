group_by(main_genre) %>%
ggplot() +
geom_boxplot(aes(x=main_genre, y=score, fill="coral2")) +
theme(axis.text.x = element_text(size = 8, angle = 45, hjust = 1)) +
labs(title = "Boxplot of Mean Review Scores Across Genres", x="Main Genre", y="Review Score") +
guides(fill=FALSE)
unique(ign$release_year)
library(forecast)
download.packages(forecast)
download.packages('forecast')
install.packages('forecast')
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/finn/medium_articles/ign_in_r")
getwd()
# install tidyverse and readr for data manipulation
install.packages("tidyverse", dependencies=TRUE, repos="http://cran.wustl.edu/")
# install.packages("readr", dependencies=TRUE)
# install.packages("here", dependencies = TRUE)
# load packages
library(tidyverse)
library(readr)
# read csv of ign data into a dataframe
ign <- read.csv(here::here('ign.csv'), stringsAsFactors = FALSE)
head(ign)
# a summary of the variables in the dataframe
str(ign)
summary(ign)
names(ign)
ign[order(ign$score, decreasing = TRUE),]
ign %>%
group_by(genre) %>%
summarise(mean_score = mean(score)) %>%
arrange(desc(mean_score)) %>%
head(., n=10) %>%
ggplot() +
geom_bar(aes(x=reorder(genre, -mean_score), y=mean_score, fill=genre), stat="identity") +
geom_label(aes(x=reorder(genre, -mean_score), y=mean_score, label = round(mean_score,digits = 2))) +
guides(fill = FALSE) +
labs(title = "Top 10 Genres by Mean Review Score", x="Genre", y="Mean Review Score") +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
ign %>%
group_by(platform) %>%
summarise(mean_score = mean(score)) %>%
arrange(desc(mean_score)) %>%
head(., n=10) %>%
ggplot() +
geom_bar(aes(x=reorder(platform, -mean_score), y=mean_score, fill = platform), stat="identity") +
geom_label(aes(x=reorder(platform, -mean_score), y=mean_score, label=round(mean_score, digits = 2))) +
labs(title = "Top 10 Platforms by Mean Review Score", x="Platform", y="Mean Review Score") +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1)) +
guides(fill = FALSE)
ign %>%
group_by(platform) %>%
summarise(counts = n()) %>%
arrange(desc(counts)) %>%
head(., n=10) %>%
ggplot() +
geom_bar(aes(x=reorder(platform, -counts), y=counts, fill=platform), stat="identity") +
geom_label(aes(x=reorder(platform, -counts), y=counts, label = counts)) +
labs(title = "Top 10 Platforms by Number of Games", x="Platform", y="Total Number of Games") +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1)) +
guides(fill = FALSE)
# string split function to get the main game genre
get_genre <- function(string) {
length <- sapply(strsplit(string, ","), length)
return(sapply(strsplit(string,","), function(x) x[1]))
}
get_genre("Compilation, Compilation")
# creating new column for main genre based on above created function
ign$main_genre <- get_genre(ign$genre)
unique(ign$main_genre)
# games that dont have a genre
ign[is.na(ign$main_genre),]
# checking to see if NA are dropped
ign <- ign[!is.na(ign$main_genre),]
dim(ign)
# checking for any other missing values
apply(ign, 2, function(x) any(is.na(x)))
ign %>%
group_by(main_genre) %>%
summarise(mean_score = mean(score)) %>%
arrange(desc(mean_score)) %>%
head(., n=10) %>%
ggplot() +
geom_bar(aes(x=reorder(main_genre, -mean_score), y=mean_score, fill = main_genre), stat="identity") +
labs(title = "Top 10 Main Genres by Mean Review Score", x="Main Genre", y="Mean Review Score") +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1)) +
guides(fill = FALSE)
ign %>%
group_by(main_genre) %>%
summarise(mean_score = mean(score)) %>%
arrange(desc(mean_score)) %>%
ggplot() +
geom_bar(aes(x=reorder(main_genre, -mean_score), y=mean_score, fill = main_genre), stat="identity") +
labs(title = "All Main Genres by Mean Review Score", x="Main Genre", y="Mean Review Score") +
theme(axis.text.x = element_text(size = 10, angle = 60, hjust = 1)) +
guides(fill = FALSE)
ign[ign$main_genre == 'Hardware',]
ign %>%
group_by(main_genre) %>%
summarise(games_count = n()) %>%
arrange(desc(games_count)) %>%
ggplot() +
geom_bar(aes(x=reorder(main_genre, -games_count), y=games_count, fill = main_genre), stat="identity") +
labs(title = "All Main Genres by Total Number of Games", x="Main Genre", y="Total Number of Games") +
theme(axis.text.x = element_text(size = 10, angle = 60, hjust = 1)) +
guides(fill = FALSE)
length(ign$title) - length(unique(ign$title))
ign %>%
filter(., grepl("LittleBigPlanet", title))
grouped_title_ign <- ign %>%
group_by(title) %>%
summarise(score = round(mean(score),1), release_year = first(release_year), count=n(), main_genre = first(main_genre))
tail(grouped_title_ign, limit=5)
grouped_title_ign %>%
group_by(main_genre) %>%
summarise(mean_score = round(mean(score),2)) %>%
ggplot() +
geom_bar(stat="identity", aes(x=reorder(main_genre, -mean_score), y=mean_score, fill = main_genre)) +
guides(fill = FALSE) +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1)) +
labs(title = "All Main Genres by Mean Review Score (After Grouping)", x="Main Genre", y="Mean Review Score")
grouped_title_ign %>%
group_by(main_genre) %>%
summarise(total_games = n()) %>%
ggplot() +
geom_bar(stat="identity", aes(x=reorder(main_genre, -total_games), y=total_games, fill = main_genre)) +
guides(fill = FALSE) +
theme(axis.text.x = element_text(size = 10, angle = 60, hjust = 1)) +
labs(title = "All Main Genres by Total Game Count", x="Main Genre", y="Total Game Count")
grouped_title_ign %>%
group_by(main_genre) %>%
summarise(total_games = n()) %>%
ggplot() +
geom_point(aes(x=reorder(main_genre, -total_games), y=total_games), size =3) +
geom_segment(aes(x=reorder(main_genre, -total_games),
xend=reorder(main_genre, -total_games),
y=0,
yend=total_games)) +
theme(axis.text.x = element_text(size = 10, angle = 60, hjust = 1)) +
labs(title="Lollipop Chart of All Main Genres By Total Game Count",
x="Main Genre",
y="Total Game Count")
grouped_title_ign %>%
group_by(main_genre) %>%
summarise(total_games = n()) %>%
arrange(desc(total_games)) %>%
head(n=12) %>%
ggplot() +
geom_bar(aes(x='', y=total_games,fill=factor(main_genre)), width=1, stat="identity") +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
coord_polar(theta="y", start=0) +
labs(fill="Main Genre",
x=NULL,
y=NULL,
title="Distribution of Games Across Top Genres")
grouped_title_ign %>%
arrange(desc(count)) %>%
tail()
grouped_title_ign %>%
arrange(desc(count)) %>%
subset(., count>=8) %>%
ggplot() +
geom_bar(aes(x=reorder(title, -count), y=count, fill=title), stat="identity") +
geom_label(aes(x=reorder(title, -count), y=count, label=count)) +
theme(axis.text.x = element_text(size = 8, angle = 45, hjust = 1)) +
guides(fill=FALSE) +
labs(title = "Top Represented Titles Across Platforms", x="Title", y="Number of Platforms")
subset(grouped_title_ign, score==10)
grouped_title_ign %>%
group_by(main_genre) %>%
ggplot() +
geom_boxplot(aes(x=main_genre, y=score, fill="coral2")) +
theme(axis.text.x = element_text(size = 8, angle = 45, hjust = 1)) +
labs(title = "Boxplot of Mean Review Scores Across Genres", x="Main Genre", y="Review Score") +
guides(fill=FALSE)
install.packages('forecast')
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/finn/medium_articles/ign_in_r")
getwd()
# install tidyverse and readr for data manipulation
install.packages("tidyverse", dependencies=TRUE, repos="http://cran.wustl.edu/")
# install.packages("readr", dependencies=TRUE)
# install.packages("here", dependencies = TRUE)
# load packages
library(tidyverse)
library(readr)
# read csv of ign data into a dataframe
ign <- read.csv(here::here('ign.csv'), stringsAsFactors = FALSE)
head(ign)
# a summary of the variables in the dataframe
str(ign)
summary(ign)
names(ign)
ign[order(ign$score, decreasing = TRUE),]
ign %>%
group_by(genre) %>%
summarise(mean_score = mean(score)) %>%
arrange(desc(mean_score)) %>%
head(., n=10) %>%
ggplot() +
geom_bar(aes(x=reorder(genre, -mean_score), y=mean_score, fill=genre), stat="identity") +
geom_label(aes(x=reorder(genre, -mean_score), y=mean_score, label = round(mean_score,digits = 2))) +
guides(fill = FALSE) +
labs(title = "Top 10 Genres by Mean Review Score", x="Genre", y="Mean Review Score") +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
ign %>%
group_by(platform) %>%
summarise(mean_score = mean(score)) %>%
arrange(desc(mean_score)) %>%
head(., n=10) %>%
ggplot() +
geom_bar(aes(x=reorder(platform, -mean_score), y=mean_score, fill = platform), stat="identity") +
geom_label(aes(x=reorder(platform, -mean_score), y=mean_score, label=round(mean_score, digits = 2))) +
labs(title = "Top 10 Platforms by Mean Review Score", x="Platform", y="Mean Review Score") +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1)) +
guides(fill = FALSE)
ign %>%
group_by(platform) %>%
summarise(counts = n()) %>%
arrange(desc(counts)) %>%
head(., n=10) %>%
ggplot() +
geom_bar(aes(x=reorder(platform, -counts), y=counts, fill=platform), stat="identity") +
geom_label(aes(x=reorder(platform, -counts), y=counts, label = counts)) +
labs(title = "Top 10 Platforms by Number of Games", x="Platform", y="Total Number of Games") +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1)) +
guides(fill = FALSE)
# string split function to get the main game genre
get_genre <- function(string) {
length <- sapply(strsplit(string, ","), length)
return(sapply(strsplit(string,","), function(x) x[1]))
}
get_genre("Compilation, Compilation")
# creating new column for main genre based on above created function
ign$main_genre <- get_genre(ign$genre)
unique(ign$main_genre)
# games that dont have a genre
ign[is.na(ign$main_genre),]
# checking to see if NA are dropped
ign <- ign[!is.na(ign$main_genre),]
dim(ign)
# checking for any other missing values
apply(ign, 2, function(x) any(is.na(x)))
ign %>%
group_by(main_genre) %>%
summarise(mean_score = mean(score)) %>%
arrange(desc(mean_score)) %>%
head(., n=10) %>%
ggplot() +
geom_bar(aes(x=reorder(main_genre, -mean_score), y=mean_score, fill = main_genre), stat="identity") +
labs(title = "Top 10 Main Genres by Mean Review Score", x="Main Genre", y="Mean Review Score") +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1)) +
guides(fill = FALSE)
ign %>%
group_by(main_genre) %>%
summarise(mean_score = mean(score)) %>%
arrange(desc(mean_score)) %>%
ggplot() +
geom_bar(aes(x=reorder(main_genre, -mean_score), y=mean_score, fill = main_genre), stat="identity") +
labs(title = "All Main Genres by Mean Review Score", x="Main Genre", y="Mean Review Score") +
theme(axis.text.x = element_text(size = 10, angle = 60, hjust = 1)) +
guides(fill = FALSE)
ign[ign$main_genre == 'Hardware',]
ign %>%
group_by(main_genre) %>%
summarise(games_count = n()) %>%
arrange(desc(games_count)) %>%
ggplot() +
geom_bar(aes(x=reorder(main_genre, -games_count), y=games_count, fill = main_genre), stat="identity") +
labs(title = "All Main Genres by Total Number of Games", x="Main Genre", y="Total Number of Games") +
theme(axis.text.x = element_text(size = 10, angle = 60, hjust = 1)) +
guides(fill = FALSE)
length(ign$title) - length(unique(ign$title))
ign %>%
filter(., grepl("LittleBigPlanet", title))
grouped_title_ign <- ign %>%
group_by(title) %>%
summarise(score = round(mean(score),1), release_year = first(release_year), count=n(), main_genre = first(main_genre))
tail(grouped_title_ign, limit=5)
grouped_title_ign %>%
group_by(main_genre) %>%
summarise(mean_score = round(mean(score),2)) %>%
ggplot() +
geom_bar(stat="identity", aes(x=reorder(main_genre, -mean_score), y=mean_score, fill = main_genre)) +
guides(fill = FALSE) +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1)) +
labs(title = "All Main Genres by Mean Review Score (After Grouping)", x="Main Genre", y="Mean Review Score")
grouped_title_ign %>%
group_by(main_genre) %>%
summarise(total_games = n()) %>%
ggplot() +
geom_bar(stat="identity", aes(x=reorder(main_genre, -total_games), y=total_games, fill = main_genre)) +
guides(fill = FALSE) +
theme(axis.text.x = element_text(size = 10, angle = 60, hjust = 1)) +
labs(title = "All Main Genres by Total Game Count", x="Main Genre", y="Total Game Count")
grouped_title_ign %>%
group_by(main_genre) %>%
summarise(total_games = n()) %>%
ggplot() +
geom_point(aes(x=reorder(main_genre, -total_games), y=total_games), size =3) +
geom_segment(aes(x=reorder(main_genre, -total_games),
xend=reorder(main_genre, -total_games),
y=0,
yend=total_games)) +
theme(axis.text.x = element_text(size = 10, angle = 60, hjust = 1)) +
labs(title="Lollipop Chart of All Main Genres By Total Game Count",
x="Main Genre",
y="Total Game Count")
grouped_title_ign %>%
group_by(main_genre) %>%
summarise(total_games = n()) %>%
arrange(desc(total_games)) %>%
head(n=12) %>%
ggplot() +
geom_bar(aes(x='', y=total_games,fill=factor(main_genre)), width=1, stat="identity") +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
coord_polar(theta="y", start=0) +
labs(fill="Main Genre",
x=NULL,
y=NULL,
title="Distribution of Games Across Top Genres")
grouped_title_ign %>%
arrange(desc(count)) %>%
tail()
grouped_title_ign %>%
arrange(desc(count)) %>%
subset(., count>=8) %>%
ggplot() +
geom_bar(aes(x=reorder(title, -count), y=count, fill=title), stat="identity") +
geom_label(aes(x=reorder(title, -count), y=count, label=count)) +
theme(axis.text.x = element_text(size = 8, angle = 45, hjust = 1)) +
guides(fill=FALSE) +
labs(title = "Top Represented Titles Across Platforms", x="Title", y="Number of Platforms")
subset(grouped_title_ign, score==10)
grouped_title_ign %>%
group_by(main_genre) %>%
ggplot() +
geom_boxplot(aes(x=main_genre, y=score, fill="coral2")) +
theme(axis.text.x = element_text(size = 8, angle = 45, hjust = 1)) +
labs(title = "Boxplot of Mean Review Scores Across Genres", x="Main Genre", y="Review Score") +
guides(fill=FALSE)
install.packages('forecast', dependencies = TRUE)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/finn/medium_articles/ign_in_r")
getwd()
# install tidyverse and readr for data manipulation
install.packages("tidyverse", dependencies=TRUE, repos="http://cran.wustl.edu/")
# install.packages("readr", dependencies=TRUE)
# install.packages("here", dependencies = TRUE)
# load packages
library(tidyverse)
library(readr)
# read csv of ign data into a dataframe
ign <- read.csv(here::here('ign.csv'), stringsAsFactors = FALSE)
head(ign)
# a summary of the variables in the dataframe
str(ign)
summary(ign)
names(ign)
ign[order(ign$score, decreasing = TRUE),]
ign %>%
group_by(genre) %>%
summarise(mean_score = mean(score)) %>%
arrange(desc(mean_score)) %>%
head(., n=10) %>%
ggplot() +
geom_bar(aes(x=reorder(genre, -mean_score), y=mean_score, fill=genre), stat="identity") +
geom_label(aes(x=reorder(genre, -mean_score), y=mean_score, label = round(mean_score,digits = 2))) +
guides(fill = FALSE) +
labs(title = "Top 10 Genres by Mean Review Score", x="Genre", y="Mean Review Score") +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
ign %>%
group_by(platform) %>%
summarise(mean_score = mean(score)) %>%
arrange(desc(mean_score)) %>%
head(., n=10) %>%
ggplot() +
geom_bar(aes(x=reorder(platform, -mean_score), y=mean_score, fill = platform), stat="identity") +
geom_label(aes(x=reorder(platform, -mean_score), y=mean_score, label=round(mean_score, digits = 2))) +
labs(title = "Top 10 Platforms by Mean Review Score", x="Platform", y="Mean Review Score") +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1)) +
guides(fill = FALSE)
ign %>%
group_by(platform) %>%
summarise(counts = n()) %>%
arrange(desc(counts)) %>%
head(., n=10) %>%
ggplot() +
geom_bar(aes(x=reorder(platform, -counts), y=counts, fill=platform), stat="identity") +
geom_label(aes(x=reorder(platform, -counts), y=counts, label = counts)) +
labs(title = "Top 10 Platforms by Number of Games", x="Platform", y="Total Number of Games") +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1)) +
guides(fill = FALSE)
# string split function to get the main game genre
get_genre <- function(string) {
length <- sapply(strsplit(string, ","), length)
return(sapply(strsplit(string,","), function(x) x[1]))
}
get_genre("Compilation, Compilation")
# creating new column for main genre based on above created function
ign$main_genre <- get_genre(ign$genre)
unique(ign$main_genre)
# games that dont have a genre
ign[is.na(ign$main_genre),]
# checking to see if NA are dropped
ign <- ign[!is.na(ign$main_genre),]
dim(ign)
# checking for any other missing values
apply(ign, 2, function(x) any(is.na(x)))
ign %>%
group_by(main_genre) %>%
summarise(mean_score = mean(score)) %>%
arrange(desc(mean_score)) %>%
head(., n=10) %>%
ggplot() +
geom_bar(aes(x=reorder(main_genre, -mean_score), y=mean_score, fill = main_genre), stat="identity") +
labs(title = "Top 10 Main Genres by Mean Review Score", x="Main Genre", y="Mean Review Score") +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1)) +
guides(fill = FALSE)
ign %>%
group_by(main_genre) %>%
summarise(mean_score = mean(score)) %>%
arrange(desc(mean_score)) %>%
ggplot() +
geom_bar(aes(x=reorder(main_genre, -mean_score), y=mean_score, fill = main_genre), stat="identity") +
labs(title = "All Main Genres by Mean Review Score", x="Main Genre", y="Mean Review Score") +
theme(axis.text.x = element_text(size = 10, angle = 60, hjust = 1)) +
guides(fill = FALSE)
ign[ign$main_genre == 'Hardware',]
ign %>%
group_by(main_genre) %>%
summarise(games_count = n()) %>%
arrange(desc(games_count)) %>%
ggplot() +
geom_bar(aes(x=reorder(main_genre, -games_count), y=games_count, fill = main_genre), stat="identity") +
labs(title = "All Main Genres by Total Number of Games", x="Main Genre", y="Total Number of Games") +
theme(axis.text.x = element_text(size = 10, angle = 60, hjust = 1)) +
guides(fill = FALSE)
length(ign$title) - length(unique(ign$title))
ign %>%
filter(., grepl("LittleBigPlanet", title))
grouped_title_ign <- ign %>%
group_by(title) %>%
summarise(score = round(mean(score),1), release_year = first(release_year), count=n(), main_genre = first(main_genre))
tail(grouped_title_ign, limit=5)
grouped_title_ign %>%
group_by(main_genre) %>%
summarise(mean_score = round(mean(score),2)) %>%
ggplot() +
geom_bar(stat="identity", aes(x=reorder(main_genre, -mean_score), y=mean_score, fill = main_genre)) +
guides(fill = FALSE) +
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1)) +
labs(title = "All Main Genres by Mean Review Score (After Grouping)", x="Main Genre", y="Mean Review Score")
grouped_title_ign %>%
group_by(main_genre) %>%
summarise(total_games = n()) %>%
ggplot() +
geom_bar(stat="identity", aes(x=reorder(main_genre, -total_games), y=total_games, fill = main_genre)) +
guides(fill = FALSE) +
theme(axis.text.x = element_text(size = 10, angle = 60, hjust = 1)) +
labs(title = "All Main Genres by Total Game Count", x="Main Genre", y="Total Game Count")
grouped_title_ign %>%
group_by(main_genre) %>%
summarise(total_games = n()) %>%
ggplot() +
geom_point(aes(x=reorder(main_genre, -total_games), y=total_games), size =3) +
geom_segment(aes(x=reorder(main_genre, -total_games),
xend=reorder(main_genre, -total_games),
y=0,
yend=total_games)) +
theme(axis.text.x = element_text(size = 10, angle = 60, hjust = 1)) +
labs(title="Lollipop Chart of All Main Genres By Total Game Count",
x="Main Genre",
y="Total Game Count")
grouped_title_ign %>%
group_by(main_genre) %>%
summarise(total_games = n()) %>%
arrange(desc(total_games)) %>%
head(n=12) %>%
ggplot() +
geom_bar(aes(x='', y=total_games,fill=factor(main_genre)), width=1, stat="identity") +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
coord_polar(theta="y", start=0) +
labs(fill="Main Genre",
x=NULL,
y=NULL,
title="Distribution of Games Across Top Genres")
grouped_title_ign %>%
arrange(desc(count)) %>%
tail()
grouped_title_ign %>%
arrange(desc(count)) %>%
subset(., count>=8) %>%
ggplot() +
geom_bar(aes(x=reorder(title, -count), y=count, fill=title), stat="identity") +
geom_label(aes(x=reorder(title, -count), y=count, label=count)) +
theme(axis.text.x = element_text(size = 8, angle = 45, hjust = 1)) +
guides(fill=FALSE) +
labs(title = "Top Represented Titles Across Platforms", x="Title", y="Number of Platforms")
subset(grouped_title_ign, score==10)
grouped_title_ign %>%
group_by(main_genre) %>%
ggplot() +
geom_boxplot(aes(x=main_genre, y=score, fill="coral2")) +
theme(axis.text.x = element_text(size = 8, angle = 45, hjust = 1)) +
labs(title = "Boxplot of Mean Review Scores Across Genres", x="Main Genre", y="Review Score") +
guides(fill=FALSE)
install.packages('forecast', dependencies = TRUE, repos="http://cran.wustl.edu/")
